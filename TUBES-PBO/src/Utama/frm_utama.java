package Utama;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.FileInputStream;

import Panel.panel_users;
import Panel.panel_transaksi;
import Panel.panel_service;
import Panel.panel_outcome;
import Panel.panel_mekanik;
import Panel.panel_income;
import Panel.panel_client;
import Panel.panel_barang;
import Koneksi.koneksi;
import Panel.panel_barangMasuk;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.util.Date;
import java.util.Locale;
/**
 *
 * @author Leily
 */
public class frm_utama extends javax.swing.JFrame {
    koneksi dbsetting;
    String driver,database,user,pass,role;
    public String nama,alamat,notelp;
    public Integer umur;
    public static String ID;
    /**
     * Creates new form frm_utama
     */
    public frm_utama() {
        initComponents();
        dbsetting = new koneksi();
        driver = dbsetting.SettingPanel("DBDriver");
        database = dbsetting.SettingPanel("DBDatabase");
        user = dbsetting.SettingPanel("DBUsername");
        pass = dbsetting.SettingPanel("DBPassword");
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        // Membuat timer dengan delay 1000 ms atau 1 detik
        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                ShowDate();
            }
        });
        // Memulai timer
        timer.start();
    }

    private void ShowDate() {
        Calendar calendar = Calendar.getInstance();
        Date TanggalSekarang = new Date();
        SimpleDateFormat formatHari = new SimpleDateFormat("EEEE",new  Locale("in","ID"));
        SimpleDateFormat TanggalWaktu = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String hari = formatHari.format(calendar.getTime());
        String tanggal = TanggalWaktu.format(TanggalSekarang);
        lb_tanggal.setText(hari+", "+tanggal);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_navbar = new javax.swing.JPanel();
        lb_tanggal = new javax.swing.JLabel();
        pn_sidebar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pn_menu = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txt_user_role = new javax.swing.JLabel();
        txt_user_nama = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pn_content = new javax.swing.JPanel();
        pn_utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pn_navbar.setBackground(new java.awt.Color(37, 59, 80));
        pn_navbar.setToolTipText("");
        pn_navbar.setPreferredSize(new java.awt.Dimension(750, 70));

        lb_tanggal.setBackground(new java.awt.Color(255, 255, 255));
        lb_tanggal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lb_tanggal.setForeground(new java.awt.Color(255, 255, 255));
        lb_tanggal.setText("Tanggal dan Waktu");

        javax.swing.GroupLayout pn_navbarLayout = new javax.swing.GroupLayout(pn_navbar);
        pn_navbar.setLayout(pn_navbarLayout);
        pn_navbarLayout.setHorizontalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                .addContainerGap(824, Short.MAX_VALUE)
                .addComponent(lb_tanggal)
                .addGap(22, 22, 22))
        );
        pn_navbarLayout.setVerticalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(lb_tanggal)
                .addContainerGap())
        );

        getContentPane().add(pn_navbar, java.awt.BorderLayout.PAGE_START);

        pn_sidebar.setBackground(new java.awt.Color(204, 204, 204));
        pn_sidebar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pn_sidebar.setPreferredSize(new java.awt.Dimension(250, 400));
        pn_sidebar.setRequestFocusEnabled(false);

        jScrollPane1.setBorder(null);

        pn_menu.setBackground(new java.awt.Color(255, 255, 255));
        pn_menu.setLayout(new javax.swing.BoxLayout(pn_menu, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(pn_menu);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(231, 231, 234));

        txt_user_role.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txt_user_role.setForeground(new java.awt.Color(37, 59, 80));
        txt_user_role.setText("Role");

        txt_user_nama.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_user_nama.setForeground(new java.awt.Color(37, 59, 80));
        txt_user_nama.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_user_nama.setText("NAMA PENGGUNA");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_user5.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_user_nama)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_user_role)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_user_nama)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_user_role, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pn_sidebarLayout = new javax.swing.GroupLayout(pn_sidebar);
        pn_sidebar.setLayout(pn_sidebarLayout);
        pn_sidebarLayout.setHorizontalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pn_sidebarLayout.setVerticalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_sidebarLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE))
        );

        getContentPane().add(pn_sidebar, java.awt.BorderLayout.LINE_START);

        pn_content.setPreferredSize(new java.awt.Dimension(750, 750));

        pn_utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pn_contentLayout = new javax.swing.GroupLayout(pn_content);
        pn_content.setLayout(pn_contentLayout);
        pn_contentLayout.setHorizontalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );
        pn_contentLayout.setVerticalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );

        getContentPane().add(pn_content, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        txt_user_nama.setText(nama);
        txt_user_role.setText(role);
        
        pn_utama.add(new home());
        pn_utama.repaint();
        pn_utama.revalidate();
        execute();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        frm_login login = new frm_login();
        login.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_utama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_tanggal;
    private javax.swing.JPanel pn_content;
    private javax.swing.JPanel pn_menu;
    private javax.swing.JPanel pn_navbar;
    private javax.swing.JPanel pn_sidebar;
    private javax.swing.JPanel pn_utama;
    private javax.swing.JLabel txt_user_nama;
    private javax.swing.JLabel txt_user_role;
    // End of variables declaration//GEN-END:variables

    private void execute() {
        ImageIcon iconMaster = new ImageIcon(getClass().getResource("/img/icon_Stack.png"));
        ImageIcon iconBarang = new ImageIcon(getClass().getResource("/img/icon_product.png"));
        ImageIcon iconClient = new ImageIcon(getClass().getResource("/img/icon_client.png"));
        ImageIcon iconMekanik = new ImageIcon(getClass().getResource("/img/icon_tools_mekanik.png"));
        ImageIcon iconService = new ImageIcon(getClass().getResource("/img/icon_service.png"));

        ImageIcon iconTransaksi = new ImageIcon(getClass().getResource("/img/icon_transaction.png"));
        ImageIcon iconBarangMasuk = new ImageIcon(getClass().getResource("/img/icon_barang_masuk.png"));
       
        ImageIcon iconHistory = new ImageIcon(getClass().getResource("/img/icon_history.png"));
        
        ImageIcon iconIncome = new ImageIcon(getClass().getResource("/img/icon_income.png"));
        ImageIcon iconOutcome = new ImageIcon(getClass().getResource("/img/icon_outcome.png"));

        ImageIcon iconUsers = new ImageIcon(getClass().getResource("/img/icon_user3.png"));
            
        menu_item barang = new menu_item(null,true,iconBarang,"Barang",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new panel_barang());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menu_item mekanik = new menu_item(null,true,iconMekanik,"Mekanik",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new panel_mekanik());
            }
        });
        menu_item client = new menu_item(null,true,iconClient,"Client",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new panel_client());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        

        menu_item users = new menu_item(iconUsers,false,null,"Users",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                pn_utama.removeAll();
                pn_utama.add(new panel_users());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menu_item service = new menu_item(null,true,iconService,"Service",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                pn_utama.removeAll();
                pn_utama.add(new panel_service());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        
        
        menu_item transaksi = new menu_item(null,true,iconTransaksi,"Transaksi",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                pn_utama.removeAll();
                pn_utama.add(new panel_transaksi());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menu_item barangMasuk = new menu_item(null,true,iconBarangMasuk,"Barang Masuk",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                pn_utama.removeAll();
                pn_utama.add(new panel_barangMasuk(role));
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });

        menu_item income = new menu_item(null,true,iconIncome,"Income",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                pn_utama.removeAll();
                pn_utama.add(new panel_income());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menu_item outcome = new menu_item(null,true,iconOutcome,"Outcome",new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                pn_utama.removeAll();
                pn_utama.add(new panel_outcome());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });

        menu_item menuMaster = new menu_item(iconMaster,false,null,"Master",null,barang,client,mekanik,service);
        menu_item menuTransaksi = new menu_item(iconTransaksi,false,null,"Transaksi",null,transaksi,barangMasuk);
        menu_item menuHistory = new menu_item(iconHistory,false,null,"History",null,income,outcome);

        if ("ADMIN".equals(role)){
            addMenu(users,menuMaster,menuTransaksi,menuHistory);
        }else{
            addMenu(menuMaster,menuTransaksi);
        }
    }
    
    private void addMenu(menu_item... menu){    
        for (int i = 0; i<menu.length;i++){
            pn_menu.add(menu[i]);
            ArrayList<menu_item> subMenu = menu[i].getSubMenu();
            for (menu_item m : subMenu){
                addMenu(m);
            }
        }
        pn_menu.revalidate();
    }
}
